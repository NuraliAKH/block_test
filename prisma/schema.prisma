// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int         @id @default(autoincrement())
  contact  String      @unique
  username String      @unique
  password String
  roles    Role[]
  Block    TestBlock[]
  UserTest UserTest[]
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model TestBlock {
  id        Int        @id @default(autoincrement())
  length    Int        @default(0)
  correct   Int        @default(0)
  incorrect Int        @default(0)
  result    Int        @default(0)
  User      User?      @relation(fields: [userId], references: [id])
  userId    Int?
  tests     Test[]
  sciences  Science[]
  UserTest  UserTest[]
}

model Science {
  id        Int        @id @default(autoincrement())
  name      String
  length    Int        @default(30)
  correct   Int        @default(0)
  incorrect Int        @default(0)
  rusult    Int        @default(0)
  block     TestBlock? @relation(fields: [blockId], references: [id])
  blockId   Int?
  tests     Test[]
  UserTest  UserTest[]
}

model Test {
  id             Int    @id @default(autoincrement())
  questionNumber Int
  answer         String

  science   Science @relation(fields: [scienceId], references: [id])
  scienceId Int

  block   TestBlock? @relation(fields: [blockId], references: [id])
  blockId Int?
}

model UserTest {
  id             Int    @id @default(autoincrement())
  questionNumber Int
  answer         String

  student   User? @relation(fields: [studentId], references: [id])
  studentId Int?

  science   Science @relation(fields: [scienceId], references: [id])
  scienceId Int

  block   TestBlock? @relation(fields: [blockId], references: [id])
  blockId Int?
}
